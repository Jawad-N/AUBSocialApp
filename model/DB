from ..app import db
from sqlalchemy.sql import func

#Common database components 

class User( db.Model ):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(30), nullable = False)
    hashed_password = db.Column(db.String(128), nullable = False)
    app_handle_name = db.Column(db.String, nullable = False)
    #A user has a password a username a handle inside the app and an id which will often be used as a foreign key


class Friendship(db.model):
    __tablename__ = 'friendship'
    id = db.Column(db.Integer, primary_key=True)
    user1_id = db.Column(db.Integer, db.ForeignKey('user.id'))
    user2_id = db.Column(db.Integer, db.ForeignKey('user.id'))
    #Friends are represented as a graph, these are the edges, the vertices are the users
    #It is a pairwise friendship

class Chat(db.model):
    __tablename__ = 'chat'
    id = db.Column(db.Integer, primary_key=True)
    is_private = db.Column(db.Boolean)
    friendship_id = db.Column(db.Integer, db.ForeignKey('friendship.id'))
    #A chat is only used as a component to be pointed at by the messages
    #We also store here if the chat is private or public, in addition to the corresponding parties


class Message(db.model):
    __tablename__ = 'message'
    id = db.Column(db.Integer, primary_key=True)
    content = db.Column(db.String)
    chat_id = db.Column(db.Integer, db.ForeignKey('chat.id'))
    timestamp = db.Column(db.DateTime, default=func.now())

class TutoringSession(db.model):
    __tablename__ = 'tutoring_session'

    id = db.Column(db.Integer, primary_key=True)
    description = db.Column(db.String)
    price = db.Column(db.Float())
    time = db.Column(db.DateTime)
    duration = db.Column(db.Integer)
    course = db.Column(db.String)